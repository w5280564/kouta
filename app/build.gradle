apply plugin: 'com.android.application'
apply plugin: 'com.huawei.agconnect'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
android {
    //移除id 'kotlin-android-extensions'替换为
    buildFeatures {
        dataBinding = true
//        viewBinding true
    }
    //加载资源
    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
    properties.load(inputStream)

    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    signingConfigs {
//        debug {
//            storeFile file('C:\\Users\\Administrator\\.android\\debug.keystore')
//            storePassword 'android'
//            keyPassword 'android'
//            keyAlias 'androiddebugkey'
//        }
//
//        release {
//            keyAlias 'moyanmoyu'
//            keyPassword '123456'
//            storeFile file('D:/waylen/jkalias/xd.jks')
//            storePassword '123456'
//        }

        config {
            storeFile file('E:/XundaWorkBase/Kouta_keystore/xd.jks')
            storePassword '123456'
            keyPassword '123456'
            keyAlias 'moyanmoyu'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.config
        }
        release {
            signingConfig signingConfigs.config
            minifyEnabled false      // 混淆
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }



    defaultConfig {
        applicationId "com.xunda.mo"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 20
        versionName "1.1.8"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //指定room.schemaLocation生成的文件路径  处理Room 警告 Schema export Error
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }

        manifestPlaceholders = [VIVO_PUSH_APPKEY: properties.getProperty("VIVO_PUSH_APPKEY", "db0f1a3ac9a43c57793b48feb475b35e"),
                                VIVO_PUSH_APPID : properties.getProperty("VIVO_PUSH_APPID", "105505641"),
                                qqappid         : "101968658"
        ]

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters 'arm64-v8a', 'armeabi' //, 'x86', 'x86_64', 'arm64-v8a'
        }

        // Enabling multidex support.
        multiDexEnabled true

    }

    // 防止oom
    dexOptions {
        javaMaxHeapSize "4g"
    }


    //gradle 7.0开始需要java11的支持
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //layout 分包配置
    sourceSets {
        main {
//            jniLibs.srcDirs = ['libs']
//            res.srcDirs = ['other/res']
//            res.srcDirs = ['other/layouts']
//            res.srcDirs = ['other/res/layouts/activites',
//                           'other/res/layouts/adapter',
//                           'other/res/layouts/fragments',
//                           'other/res/layouts/popupwindows',
//                           'other/res/layouts/xrecycler']
//            manifest.srcFile("other/AndroidManifest.xml")

            res.srcDirs = [
                    'src/main/res/layouts/dialog',
                    'src/main/res/layouts/activites',
                    'src/main/res/layouts/adapter',
                    'src/main/res/layouts/fragments',
                    'src/main/res/layouts/popupwindows',
                    'src/main/res/layouts/xrecycler',
                    'src/main/res/layouts',
                    'src/main/res'
                    //src/main/res必须要配置写上XML分包
            ]
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

//    packagingOptions {//加上这写代码
//        pickFirst 'lib/x86/libsqlite.so'
//        pickFirst 'lib/x86_64/libsqlite.so'
//        pickFirst 'lib/armeabi-v7a/libsqlite.so'
//        pickFirst 'lib/arm64-v8a/libsqlite.so'
//        pickFirst 'lib/x86/libhyphenate.so'
//        pickFirst 'lib/x86_64/libhyphenate.so'
//        pickFirst 'lib/armeabi-v7a/libhyphenate.so'
//        pickFirst 'lib/arm64-v8a/libhyphenate.so'
//    }

}

dependencies {
//    implementation fileTree(include: ['*.?ar'], dir: 'libs')//修改后样式
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
//    implementation files('libs/pinyin4j-2.5.0.jar')
    implementation 'androidx.work:work-runtime:2.5.0'
    implementation 'androidx.room:room-runtime:2.2.6'
    implementation 'com.google.firebase:firebase-messaging:21.1.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation files('libs/vivo_push_v2.3.1.jar')
    //oppo push
    implementation(name: 'oppo_push_v2.1.0', ext: 'aar')
//    implementation files('libs/MiPush_SDK_Client_4_8_2.jar')
    implementation files('libs/MiPush_SDK_Client_4_5_0.jar')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'org.xutils:xutils:3.9.0'
    implementation 'com.github.JessYanCoding:AndroidAutoSize:v1.2.1'//适配

    implementation 'com.huawei.storage:esdk-obs-android:3.1.3'
    implementation 'com.facebook.fresco:fresco:0.12.0'

    implementation 'io.github.lucksiege:pictureselector:v2.7.3-rc02'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.github.mcxtzhang:SwipeCaptcha:V1.0.0'
    annotationProcessor 'androidx.room:room-compiler:2.2.6'
    /* get set 不用写compileOnly和annotationProcessor 两个都需要添加*/
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

//    implementation 'io.hyphenate:hyphenate-sdk:3.8.2' //完整版本，包含音视频功能
    implementation 'io.hyphenate:hyphenate-chat:3.8.7'
    implementation 'io.hyphenate:ease-im-kit:3.8.7'
    //EaseCallKit依赖，必须添加环信IM SDK
    implementation 'io.hyphenate:ease-call-kit:3.8.7'
    // fresh and load more
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    // parse
    implementation 'com.parse:parse-android:1.13.1'
    //使用OAID
    implementation 'com.github.gzu-liyujiang:Android_CN_OAID:4.1.4'
    implementation 'com.github.Jlanglang:TreeRecyclerView:1.3.1-androidx'

    implementation 'com.amap.api:3dmap:7.9.1'
    implementation 'com.amap.api:location:5.3.0'
    implementation 'com.amap.api:search:7.9.0'
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
    implementation 'liji.library.dev:citypickerview:5.2.4'

    implementation 'io.github.everythingme:overscroll-decor-android:1.1.1'
    implementation 'com.github.bingoogolapple.BGAQRCode-Android:zxing:1.3.8'
    implementation 'org.apache.commons:commons-lang3:3.7'
    implementation 'com.huawei.hms:push:6.1.0.300'
//    implementation files('libs/alipaySdk-15.8.03.210428205839.aar')
    api(name: 'alipaySdk-15.8.03.210428205839', ext: 'aar')
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.8.0'
//    api 'com.tencent.mm.opensdk:wechat-sdk-android:+'
    // 或者直接引用最新版本
    //桌面角标
    api 'me.leolin:ShortcutBadger:1.1.22@aar'
    //大图片控制器
    implementation 'com.github.chrisbanes:PhotoView:2.0.0'
    //动态申请权限
    api 'pub.devrel:easypermissions:1.0.1'
    implementation 'com.blankj:utilcodex:1.30.6'
    //java与kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // 友盟基础组件库（所有友盟业务SDK都依赖基础组件库）
//    implementation  'com.umeng.umsdk:common:9.4.4'// (必选)
//    implementation  'com.umeng.umsdk:asms:1.4.1'// asms包依赖必选

//    implementation  'com.umeng.umsdk:share-core:7.1.6'//分享核心库，必选
//    implementation  'com.umeng.umsdk:share-board:7.1.6'//分享面板功能，可选

//    implementation 'com.umeng.umsdk:share-wx:7.1.6' //微信完整版
//    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.7.9'//微信官方依赖库，必选
//
//    implementation 'com.umeng.umsdk:share-qq:7.1.6'//QQ完整版
    implementation 'com.tencent.tauth:qqopensdk:3.53.0'//QQ官方依赖库，必选
    implementation 'com.squareup.okhttp3:okhttp:3.12.12'//QQ SDK在3.53.0版本及以上时需要集成okhttp官方依赖库，必选
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'com.guolindev.permissionx:permissionx:1.6.1' //权限管理
//

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50'//万能适配器

}

// ADD THIS AT THE BOTTOM
repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

